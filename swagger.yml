basePath: /
consumes:
- application/json
definitions:
  Comment:
    properties:
      body:
        description: Body of the comment
        maxLength: 255
        minLength: 5
        type: string
        x-go-name: Body
      createdAt:
        description: Time comment was created at
        type: string
        x-go-name: CreatedAt
      feedbackId:
        description: Id of the feedback this comment is related to
        format: int64
        minimum: 1
        type: integer
        x-go-name: FeedbackId
      id:
        description: Id of the comment
        format: int64
        minimum: 1
        type: integer
        x-go-name: Id
      parentId:
        description: Id of the comment that this comment relates to
        format: int64
        minimum: 1
        type: integer
        x-go-name: ParentId
      updatedAt:
        description: Time comment was updated at
        type: string
        x-go-name: UpdatedAt
      userId:
        description: Id of the user who created the comment
        format: int64
        minimum: 1
        type: integer
        x-go-name: UserId
    type: object
    x-go-package: product-feedback/comment
  Feedback:
    properties:
      body:
        description: Body of the feedback
        maxLength: 1000
        minLength: 10
        type: string
        x-go-name: Body
      category:
        description: |-
          Category of the feedback

          Possible categories: 'ui', 'ux', 'enchancement', 'bug', 'feature'
        type: string
        x-go-name: Category
      createdAt:
        description: Time feedback was created at
        type: string
        x-go-name: CreatedAt
      id:
        description: Id of the feedback
        format: int64
        minimum: 1
        type: integer
        x-go-name: Id
      status:
        description: |-
          Status of the feedback

          Possible statuses: 'idea', 'defined', 'in-progress', 'done'
        type: string
        x-go-name: Status
      title:
        description: Title of the feedback
        maxLength: 50
        minLength: 5
        type: string
        x-go-name: Title
      updatedAt:
        description: Time feedback was updated at
        type: string
        x-go-name: UpdatedAt
      userId:
        description: Id of a user who created a feedback
        format: int64
        minimum: 1
        type: integer
        x-go-name: UserId
    type: object
    x-go-package: product-feedback/feedback
  User:
    properties:
      avatar_url:
        description: Avatar URL
        type: string
        x-go-name: AvatarUrl
      created_at:
        description: Time the user was created at
        type: string
        x-go-name: CreatedAt
      email:
        description: Email of the user
        example: user@company.com
        type: string
        x-go-name: Email
      id:
        description: Id of the user
        format: int64
        minimum: 1
        type: integer
        x-go-name: Id
      name:
        description: Name of the user
        maxLength: 50
        minLength: 2
        type: string
        x-go-name: Name
      updated_at:
        description: Time the user was updated at
        type: string
        x-go-name: UpdatedAt
      user_name:
        description: User name
        maxLength: 50
        minLength: 2
        type: string
        x-go-name: UserName
    type: object
    x-go-package: product-feedback/user
  Vote:
    properties:
      createdAt:
        description: Time this vote was created at
        type: string
        x-go-name: CreatedAt
      feedbackId:
        description: Feedback id that this vote is related to
        format: int64
        minimum: 1
        type: integer
        x-go-name: FeedbackId
      id:
        description: Id of the vote
        format: int64
        minimum: 1
        type: integer
        x-go-name: Id
      updatedAt:
        description: Time this vote was updated at
        type: string
        x-go-name: UpdatedAt
      userId:
        description: Id of a user that created this vote
        format: int64
        minimum: 1
        type: integer
        x-go-name: UserId
    type: object
    x-go-package: product-feedback/vote
  createCommentInput:
    properties:
      body:
        description: Body of the comment
        maxLength: 255
        minLength: 5
        type: string
        x-go-name: Body
      feedbackId:
        description: Id of the feedback this comment is related to
        format: int64
        minimum: 1
        type: integer
        x-go-name: FeedbackId
      parentId:
        description: Id of the comment that this comment relates to
        format: int64
        minimum: 1
        type: integer
        x-go-name: ParentId
    required:
    - body
    - feedbackId
    type: object
    x-go-package: product-feedback/comment
  createFeedbackInput:
    properties:
      body:
        description: Body of the feedback
        maxLength: 1000
        minLength: 10
        type: string
        x-go-name: Body
      category:
        description: Category of the feedback
        type: string
        x-go-name: Category
      status:
        description: Status of the feedback
        type: string
        x-go-name: Status
      title:
        description: Title of the feedback
        maxLength: 50
        minLength: 5
        type: string
        x-go-name: Title
    required:
    - title
    - body
    - category
    type: object
    x-go-package: product-feedback/feedback
  createVoteInput:
    properties:
      feedbackId:
        description: The id of the feedback vote is related to
        format: int64
        minimum: 1
        type: integer
        x-go-name: FeedbackId
    required:
    - feedbackId
    type: object
    x-go-package: product-feedback/vote
  refreshAccessTokenInput:
    properties:
      refreshToken:
        description: |-
          Refresh token in format of JWT is used to get
          access token in exchange
        type: string
        x-go-name: RefreshToken
    required:
    - refreshToken
    type: object
    x-go-package: product-feedback/auth
  updateFeedbackInput:
    properties:
      body:
        description: Body of the feedback
        maxLength: 1000
        minLength: 10
        type: string
        x-go-name: Body
      category:
        description: Category of the feedback
        type: string
        x-go-name: Category
      status:
        description: Status of the feedback
        type: string
        x-go-name: Status
      title:
        description: Title of the feedback
        maxLength: 50
        minLength: 5
        type: string
        x-go-name: Title
    type: object
    x-go-package: product-feedback/feedback
info:
  description: Documentation Product Feedback API
  title: Product Feedback API
  version: 1.0.0
paths:
  /api/auth/github:
    get:
      description: Redirects to GitHub authentication
      operationId: loginWithGitHub
      parameters:
      - description: |-
          Code to handle login with GitHub.
          GitHub itself provides it.
        in: query
        name: code
        required: true
        type: string
        x-go-name: Code
      responses:
        "302":
          $ref: '#/responses/foundResponse'
      tags:
      - auth
  /api/auth/github/callback:
    get:
      description: Redirects to GitHub authentication
      operationId: loginWithGitHub
      parameters:
      - description: |-
          Code to handle login with GitHub.
          GitHub itself provides it.
        in: query
        name: code
        required: true
        type: string
        x-go-name: Code
      responses:
        "302":
          $ref: '#/responses/foundResponse'
      tags:
      - auth
  /api/auth/refresh-token:
    post:
      description: Redirects to GitHub authentication
      operationId: refreshAccessToken
      parameters:
      - description: Refresh token is used to get access token
        in: body
        name: Body
        required: true
        schema:
          $ref: '#/definitions/refreshAccessTokenInput'
      responses:
        "200":
          $ref: '#/responses/refreshAccessTokenResponse'
        "403":
          $ref: '#/responses/errorResponse'
      tags:
      - auth
  /api/comments:
    get:
      description: Returns a list of all comments in the system
      operationId: getAllComments
      parameters:
      - description: |-
          Feedback id can be used to filter out
          comments by feedback they relate to.
        in: query
        name: feedbackId
        type: string
        x-go-name: FeedbackId
      responses:
        "200":
          $ref: '#/responses/getAllCommentsResponse'
      security:
      - Bearer: []
      tags:
      - comments
    post:
      description: Creates a comment
      operationId: createComment
      parameters:
      - description: Comment data structure to create comment
        in: body
        name: Body
        required: true
        schema:
          $ref: '#/definitions/createCommentInput'
      responses:
        "200":
          $ref: '#/responses/createCommentResponse'
      security:
      - Bearer: []
      tags:
      - comments
  /api/comments/:id:
    get:
      description: Returns comment by id
      operationId: getCommentById
      parameters:
      - description: The id of the commnet for which the operation relates
        format: int64
        in: path
        name: Id
        required: true
        type: integer
      responses:
        "200":
          $ref: '#/responses/getCommentByIdResponse'
        "404":
          $ref: '#/responses/errorResponse'
      security:
      - Bearer: []
      tags:
      - comments
  /api/feedback:
    get:
      description: Returns all product feedback in the system
      operationId: getAllFeedback
      responses:
        "200":
          $ref: '#/responses/getAllFeedbackResponse'
      security:
      - Bearer: []
      tags:
      - feedback
    post:
      description: Create product feedback
      operationId: createFeedback
      parameters:
      - description: Feedback data structure to create feedback
        in: body
        name: Body
        required: true
        schema:
          $ref: '#/definitions/createFeedbackInput'
      responses:
        "200":
          $ref: '#/responses/createFeedbackResponse'
      security:
      - Bearer: []
      tags:
      - feedback
  /api/feedback/:id:
    delete:
      description: Delete product feedback
      operationId: deleteFeedback
      parameters:
      - description: The id of the feedback for which the operation relates
        format: int64
        in: path
        name: id
        required: true
        type: integer
        x-go-name: Id
      responses:
        "200":
          $ref: '#/responses/okResponse'
        "404":
          $ref: '#/responses/errorResponse'
      security:
      - Bearer: []
      tags:
      - feedback
    get:
      description: Returns product feedback by id
      operationId: getFeedbackById
      parameters:
      - description: The id of the feedback for which the operation relates
        format: int64
        in: path
        name: id
        required: true
        type: integer
        x-go-name: Id
      responses:
        "200":
          $ref: '#/responses/getFeedbackByIdResponse'
        "404":
          $ref: '#/responses/errorResponse'
      security:
      - Bearer: []
      tags:
      - feedback
    put:
      description: Returns product feedback by id
      operationId: updateFeedback
      parameters:
      - description: Feedback data structure to update feedback
        in: body
        name: Body
        required: true
        schema:
          $ref: '#/definitions/updateFeedbackInput'
      - description: The id of the feedback for which the operation relates
        format: int64
        in: path
        name: id
        required: true
        type: integer
        x-go-name: Id
      responses:
        "200":
          $ref: '#/responses/okResponse'
        "400":
          $ref: '#/responses/errorResponse'
        "404":
          $ref: '#/responses/errorResponse'
      security:
      - Bearer: []
      tags:
      - feedback
  /api/users/:id:
    get:
      description: Returs user data by id
      operationId: getUserById
      parameters:
      - description: The id of the user for which the operation relates
        format: int64
        in: path
        name: id
        required: true
        type: integer
        x-go-name: Id
      responses:
        "200":
          $ref: '#/responses/getUserResponse'
        "404":
          $ref: '#/responses/errorResponse'
      security:
      - Bearer: []
      tags:
      - users
  /api/users/me:
    get:
      description: Returs user data
      operationId: getMe
      responses:
        "200":
          $ref: '#/responses/getUserResponse'
      security:
      - Bearer: []
      tags:
      - users
  /api/votes:
    get:
      description: Returns a list of votes in the system
      operationId: getAllVotes
      parameters:
      - description: |-
          Feedback id can be used to filter out
          votes by feedback they relate to.
        in: query
        name: feedbackId
        type: string
        x-go-name: FeedbackId
      responses:
        "200":
          $ref: '#/responses/getAllVotesResponse'
      security:
      - Bearer: []
      tags:
      - votes
    post:
      description: Creates a vote
      operationId: createVote
      parameters:
      - description: Vote data structure to create vote
        in: body
        name: Body
        required: true
        schema:
          $ref: '#/definitions/createVoteInput'
      responses:
        "200":
          $ref: '#/responses/createVoteResponse'
      security:
      - Bearer: []
      tags:
      - votes
  /api/votes/:id:
    delete:
      description: Deletes a vote
      operationId: deleteVote
      parameters:
      - description: The id of the vote for which the operation relates
        format: int64
        in: path
        name: id
        required: true
        type: integer
        x-go-name: Id
      responses:
        "200":
          $ref: '#/responses/okResponse'
        "404":
          $ref: '#/responses/errorResponse'
      security:
      - Bearer: []
      tags:
      - votes
produces:
- application/json
responses:
  createCommentResponse:
    description: Create comment response
    schema:
      properties:
        commentId:
          description: id of a newly created comment
          type: string
          x-go-name: CommentId
      type: object
  createFeedbackResponse:
    description: OK response
    schema:
      properties:
        feedbackId:
          description: id of a newly created feedback
          type: string
          x-go-name: FeedbacId
      type: object
  createVoteResponse:
    description: OK response
    schema:
      properties:
        voteId:
          description: id of a newly created vote
          type: string
          x-go-name: VoteId
      type: object
  errorResponse:
    description: Error response
    schema:
      properties:
        message:
          description: Error message
          type: string
          x-go-name: Message
      type: object
  foundResponse:
    description: Redirects to login route
  getAllCommentsResponse:
    description: Returns a list of all comments in the system
    schema:
      items:
        $ref: '#/definitions/Comment'
      type: array
  getAllFeedbackResponse:
    description: Returns all product feedback in the system
    schema:
      items:
        $ref: '#/definitions/Feedback'
      type: array
  getAllVotesResponse:
    description: OK response
    schema:
      items:
        $ref: '#/definitions/Vote'
      type: array
  getCommentByIdResponse:
    description: Returns a comment with the specified Id
    schema:
      $ref: '#/definitions/Comment'
  getFeedbackByIdResponse:
    description: Returns product feedback by id
    schema:
      $ref: '#/definitions/Feedback'
  getUserResponse:
    description: OK response
    schema:
      $ref: '#/definitions/User'
  okResponse:
    description: OK response
    schema:
      properties:
        message:
          description: OK message
          type: string
          x-go-name: Message
      type: object
  refreshAccessTokenResponse:
    description: OK response
    schema:
      properties:
        accessToken:
          description: Access token
          type: string
          x-go-name: AccessToken
      type: object
schemes:
- http
securityDefinitions:
  Bearer:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
